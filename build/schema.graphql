type Borrow @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  onBehalfOf: Bytes! # address
  amount: BigInt! # uint256
  borrowRateMode: BigInt! # uint256
  borrowRate: BigInt! # uint256
  referral: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  onBehalfOf: Bytes! # address
  amount: BigInt! # uint256
  referral: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FlashLoan @entity(immutable: true) {
  id: Bytes!
  target: Bytes! # address
  initiator: Bytes! # address
  asset: Bytes! # address
  amount: BigInt! # uint256
  premium: BigInt! # uint256
  referralCode: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LiquidationCall @entity(immutable: true) {
  id: Bytes!
  collateralAsset: Bytes! # address
  debtAsset: Bytes! # address
  user: Bytes! # address
  debtToCover: BigInt! # uint256
  liquidatedCollateralAmount: BigInt! # uint256
  liquidator: Bytes! # address
  receiveAToken: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RebalanceStableBorrowRate @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Repay @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  repayer: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ReserveDataUpdated @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  liquidityRate: BigInt! # uint256
  stableBorrowRate: BigInt! # uint256
  variableBorrowRate: BigInt! # uint256
  liquidityIndex: BigInt! # uint256
  variableBorrowIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ReserveUsedAsCollateralDisabled @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ReserveUsedAsCollateralEnabled @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Swap @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  rateMode: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  reserve: Bytes! # address
  user: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
